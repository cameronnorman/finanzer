{
  "definitions": {},
  "info": {
    "title": "finanzer",
    "version": "1.0.0",
    "description": "Specification JSONs: [v2](/api-spec/v2), [v3](/api-spec/v3)."
  },
  "paths": {
    "/transactions": {
      "get": {
        "summary": "/transactions",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "recurring": {
                    "type": "boolean"
                  },
                  "recurringType": {
                    "type": "string"
                  },
                  "day": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "description",
                  "amount",
                  "recurring",
                  "recurringType",
                  "day",
                  "currency"
                ]
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/transactions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "example": 10
                },
                "description": {
                  "type": "string",
                  "example": "test transaction"
                },
                "day": {
                  "type": "number",
                  "example": 2
                },
                "recurring": {
                  "type": "boolean",
                  "example": true
                },
                "recurringType": {
                  "type": "boolean",
                  "example": true
                },
                "currency": {
                  "type": "string",
                  "example": "euros"
                },
                "id": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "example": 10
                },
                "description": {
                  "type": "string",
                  "example": "test transaction"
                },
                "day": {
                  "type": "number",
                  "example": 2
                },
                "recurring": {
                  "type": "boolean",
                  "example": true
                },
                "recurringType": {
                  "type": "boolean",
                  "example": true
                },
                "currency": {
                  "type": "string",
                  "example": "euros"
                },
                "id": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string",
              "example": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>RepositoryNotFoundError: No repository for &quot;Transaction&quot; was found. Looks like this entity is not registered in current &quot;default&quot; connection?<br> &nbsp; &nbsp;at new RepositoryNotFoundError (/usr/src/app/src/error/RepositoryNotFoundError.ts:11:9)<br> &nbsp; &nbsp;at EntityManager.Object.&lt;anonymous&gt;.EntityManager.getRepository (/usr/src/app/src/entity-manager/EntityManager.ts:913:19)<br> &nbsp; &nbsp;at Connection.Object.&lt;anonymous&gt;.Connection.getRepository (/usr/src/app/src/connection/Connection.ts:346:29)<br> &nbsp; &nbsp;at Object.getRepository (/usr/src/app/src/index.ts:284:55)<br> &nbsp; &nbsp;at /usr/src/app/src/routes/transactions.ts:18:33<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at next (/usr/src/app/node_modules/express/lib/router/route.js:137:13)<br> &nbsp; &nbsp;at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:112:3)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at /usr/src/app/node_modules/express/lib/router/index.js:281:22</pre>\n</body>\n</html>\n"
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json",
          "text/html"
        ]
      }
    },
    "/profile/{id}": {
      "get": {
        "summary": "/profile/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 20
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 9
                },
                "balance": {
                  "type": "number",
                  "example": 20.59
                },
                "currency": {
                  "type": "string",
                  "example": "euros"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string",
              "example": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>ConnectionNotFoundError: Connection &quot;default&quot; was not found.<br> &nbsp; &nbsp;at new ConnectionNotFoundError (/usr/src/app/src/error/ConnectionNotFoundError.ts:8:9)<br> &nbsp; &nbsp;at ConnectionManager.Object.&lt;anonymous&gt;.ConnectionManager.get (/usr/src/app/src/connection/ConnectionManager.ts:40:19)<br> &nbsp; &nbsp;at Object.getRepository (/usr/src/app/src/index.ts:284:35)<br> &nbsp; &nbsp;at /usr/src/app/src/routes/profiles.ts:10:29<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at next (/usr/src/app/node_modules/express/lib/router/route.js:137:13)<br> &nbsp; &nbsp;at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:112:3)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at /usr/src/app/node_modules/express/lib/router/index.js:281:22<br> &nbsp; &nbsp;at param (/usr/src/app/node_modules/express/lib/router/index.js:354:14)</pre>\n</body>\n</html>\n"
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json",
          "text/html"
        ]
      },
      "put": {
        "summary": "/profile/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 2
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 10
                },
                "balance": {
                  "type": "number",
                  "example": 60.39
                },
                "currency": {
                  "type": "string",
                  "example": "euros"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 10
                },
                "balance": {
                  "type": "number",
                  "example": 60.39
                },
                "currency": {
                  "type": "string",
                  "example": "euros"
                }
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/check": {
      "get": {
        "summary": "/check",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "OK"
            }
          }
        },
        "tags": [],
        "produces": [
          "text/html"
        ]
      }
    }
  },
  "swagger": "2.0",
  "tags": [],
  "schemes": [
    "http"
  ],
  "host": "127.0.0.1:3000"
}